/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DocumentLine
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-03T17:52:28.678Z[GMT]")
public class DocumentLine {
  @SerializedName("cantidad")
  private Object cantidad = null;

  @SerializedName("descripcion")
  private String descripcion = null;

  @SerializedName("icb")
  private Boolean icb = null;

  @SerializedName("precioConIgv")
  private Object precioConIgv = null;

  @SerializedName("precioUnitario")
  private Object precioUnitario = null;

  /**
   * Catalogo 07
   */
  @JsonAdapter(TipoIgvEnum.Adapter.class)
  public enum TipoIgvEnum {
    GRAVADO_OPERACION_ONEROSA("GRAVADO_OPERACION_ONEROSA"),
    _10("10"),
    GRAVADO_RETIRO_POR_PREMIO("GRAVADO_RETIRO_POR_PREMIO"),
    _11("11"),
    GRAVADO_RETIRO_POR_DONACION("GRAVADO_RETIRO_POR_DONACION"),
    _12("12"),
    GRAVADO_RETIRO("GRAVADO_RETIRO"),
    _13("13"),
    GRAVADO_RETIRO_POR_PUBLICIDAD("GRAVADO_RETIRO_POR_PUBLICIDAD"),
    _14("14"),
    GRAVADO_BONIFICACIONES("GRAVADO_BONIFICACIONES"),
    _15("15"),
    GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES("GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES"),
    _16("16"),
    GRAVADO_IVAP("GRAVADO_IVAP"),
    _17("17"),
    EXONERADO_OPERACION_ONEROSA("EXONERADO_OPERACION_ONEROSA"),
    _20("20"),
    EXONERADO_TRANSFERENCIA_GRATUITA("EXONERADO_TRANSFERENCIA_GRATUITA"),
    _21("21"),
    INAFECTO_OPERACION_ONEROSA("INAFECTO_OPERACION_ONEROSA"),
    _30("30"),
    INAFECTO_RETIRO_POR_BONIFICACION("INAFECTO_RETIRO_POR_BONIFICACION"),
    _31("31"),
    INAFECTO_RETIRO("INAFECTO_RETIRO"),
    _32("32"),
    INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS("INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS"),
    _33("33"),
    INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO("INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO"),
    _34("34"),
    INAFECTO_RETIRO_POR_PREMIO("INAFECTO_RETIRO_POR_PREMIO"),
    _35("35"),
    INAFECTO_RETIRO_POR_PUBLICIDAD("INAFECTO_RETIRO_POR_PUBLICIDAD"),
    _36("36"),
    EXPORTACION("EXPORTACION"),
    _40("40");

    private String value;

    TipoIgvEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TipoIgvEnum fromValue(String text) {
      for (TipoIgvEnum b : TipoIgvEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TipoIgvEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TipoIgvEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TipoIgvEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TipoIgvEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("tipoIgv")
  private TipoIgvEnum tipoIgv = null;

  @SerializedName("unidadMedida")
  private String unidadMedida = null;

  public DocumentLine cantidad(Object cantidad) {
    this.cantidad = cantidad;
    return this;
  }

   /**
   * Get cantidad
   * @return cantidad
  **/
  @Schema(required = true, description = "")
  public Object getCantidad() {
    return cantidad;
  }

  public void setCantidad(Object cantidad) {
    this.cantidad = cantidad;
  }

  public DocumentLine descripcion(String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

   /**
   * Descripci칩n del producto/servicio
   * @return descripcion
  **/
  @Schema(example = "Item1", required = true, description = "Descripci칩n del producto/servicio")
  public String getDescripcion() {
    return descripcion;
  }

  public void setDescripcion(String descripcion) {
    this.descripcion = descripcion;
  }

  public DocumentLine icb(Boolean icb) {
    this.icb = icb;
    return this;
  }

   /**
   * True si el producto est치 afecto al impuesto ICB_PE
   * @return icb
  **/
  @Schema(example = "false", description = "True si el producto est치 afecto al impuesto ICB_PE")
  public Boolean isIcb() {
    return icb;
  }

  public void setIcb(Boolean icb) {
    this.icb = icb;
  }

  public DocumentLine precioConIgv(Object precioConIgv) {
    this.precioConIgv = precioConIgv;
    return this;
  }

   /**
   * Get precioConIgv
   * @return precioConIgv
  **/
  @Schema(description = "")
  public Object getPrecioConIgv() {
    return precioConIgv;
  }

  public void setPrecioConIgv(Object precioConIgv) {
    this.precioConIgv = precioConIgv;
  }

  public DocumentLine precioUnitario(Object precioUnitario) {
    this.precioUnitario = precioUnitario;
    return this;
  }

   /**
   * Get precioUnitario
   * @return precioUnitario
  **/
  @Schema(description = "")
  public Object getPrecioUnitario() {
    return precioUnitario;
  }

  public void setPrecioUnitario(Object precioUnitario) {
    this.precioUnitario = precioUnitario;
  }

  public DocumentLine tipoIgv(TipoIgvEnum tipoIgv) {
    this.tipoIgv = tipoIgv;
    return this;
  }

   /**
   * Catalogo 07
   * @return tipoIgv
  **/
  @Schema(example = "GRAVADO_OPERACION_ONEROSA", description = "Catalogo 07")
  public TipoIgvEnum getTipoIgv() {
    return tipoIgv;
  }

  public void setTipoIgv(TipoIgvEnum tipoIgv) {
    this.tipoIgv = tipoIgv;
  }

  public DocumentLine unidadMedida(String unidadMedida) {
    this.unidadMedida = unidadMedida;
    return this;
  }

   /**
   * Get unidadMedida
   * @return unidadMedida
  **/
  @Schema(example = "NIU", description = "")
  public String getUnidadMedida() {
    return unidadMedida;
  }

  public void setUnidadMedida(String unidadMedida) {
    this.unidadMedida = unidadMedida;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentLine documentLine = (DocumentLine) o;
    return Objects.equals(this.cantidad, documentLine.cantidad) &&
        Objects.equals(this.descripcion, documentLine.descripcion) &&
        Objects.equals(this.icb, documentLine.icb) &&
        Objects.equals(this.precioConIgv, documentLine.precioConIgv) &&
        Objects.equals(this.precioUnitario, documentLine.precioUnitario) &&
        Objects.equals(this.tipoIgv, documentLine.tipoIgv) &&
        Objects.equals(this.unidadMedida, documentLine.unidadMedida);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cantidad, descripcion, icb, precioConIgv, precioUnitario, tipoIgv, unidadMedida);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentLine {\n");
    
    sb.append("    cantidad: ").append(toIndentedString(cantidad)).append("\n");
    sb.append("    descripcion: ").append(toIndentedString(descripcion)).append("\n");
    sb.append("    icb: ").append(toIndentedString(icb)).append("\n");
    sb.append("    precioConIgv: ").append(toIndentedString(precioConIgv)).append("\n");
    sb.append("    precioUnitario: ").append(toIndentedString(precioUnitario)).append("\n");
    sb.append("    tipoIgv: ").append(toIndentedString(tipoIgv)).append("\n");
    sb.append("    unidadMedida: ").append(toIndentedString(unidadMedida)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
