/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Catalog1
 */
@JsonAdapter(Catalog1.Adapter.class)
public enum Catalog1 {
  BOLETA("BOLETA"),
  COMPROBANTE_PAGO_SEAE("COMPROBANTE_PAGO_SEAE"),
  DOCUMENTOS_AFP("DOCUMENTOS_AFP"),
  DOCUMENTOS_FINANCIEROS("DOCUMENTOS_FINANCIEROS"),
  FACTURA("FACTURA"),
  GUIA_REMISION_REMITENTE("GUIA_REMISION_REMITENTE"),
  GUIA_REMISION_REMITENTE_COMPLEMENTARIA("GUIA_REMISION_REMITENTE_COMPLEMENTARIA"),
  GUIA_REMISION_TRANSPORTISTA("GUIA_REMISION_TRANSPORTISTA"),
  GUIA_REMISION_TRANSPORTISTA_COMPLEMENTARIA("GUIA_REMISION_TRANSPORTISTA_COMPLEMENTARIA"),
  NOTA_CREDITO("NOTA_CREDITO"),
  NOTA_DEBITO("NOTA_DEBITO"),
  PERCEPCION("PERCEPCION"),
  PERCEPCION_VENTA_INTERNA("PERCEPCION_VENTA_INTERNA"),
  RETENCION("RETENCION"),
  TICKET_MAQUINA_REGISTRADORA("TICKET_MAQUINA_REGISTRADORA");

  private String value;

  Catalog1(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Catalog1 fromValue(String text) {
    for (Catalog1 b : Catalog1.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<Catalog1> {
    @Override
    public void write(final JsonWriter jsonWriter, final Catalog1 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Catalog1 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Catalog1.fromValue(String.valueOf(value));
    }
  }
}
