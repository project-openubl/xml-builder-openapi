/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Catalog7
 */
@JsonAdapter(Catalog7.Adapter.class)
public enum Catalog7 {
  EXONERADO_OPERACION_ONEROSA("EXONERADO_OPERACION_ONEROSA"),
  EXONERADO_TRANSFERENCIA_GRATUITA("EXONERADO_TRANSFERENCIA_GRATUITA"),
  EXPORTACION("EXPORTACION"),
  GRAVADO_BONIFICACIONES("GRAVADO_BONIFICACIONES"),
  GRAVADO_IVAP("GRAVADO_IVAP"),
  GRAVADO_OPERACION_ONEROSA("GRAVADO_OPERACION_ONEROSA"),
  GRAVADO_RETIRO("GRAVADO_RETIRO"),
  GRAVADO_RETIRO_POR_DONACION("GRAVADO_RETIRO_POR_DONACION"),
  GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES("GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES"),
  GRAVADO_RETIRO_POR_PREMIO("GRAVADO_RETIRO_POR_PREMIO"),
  GRAVADO_RETIRO_POR_PUBLICIDAD("GRAVADO_RETIRO_POR_PUBLICIDAD"),
  INAFECTO_OPERACION_ONEROSA("INAFECTO_OPERACION_ONEROSA"),
  INAFECTO_RETIRO("INAFECTO_RETIRO"),
  INAFECTO_RETIRO_POR_BONIFICACION("INAFECTO_RETIRO_POR_BONIFICACION"),
  INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO("INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO"),
  INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS("INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS"),
  INAFECTO_RETIRO_POR_PREMIO("INAFECTO_RETIRO_POR_PREMIO"),
  INAFECTO_RETIRO_POR_PUBLICIDAD("INAFECTO_RETIRO_POR_PUBLICIDAD");

  private String value;

  Catalog7(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Catalog7 fromValue(String text) {
    for (Catalog7 b : Catalog7.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<Catalog7> {
    @Override
    public void write(final JsonWriter jsonWriter, final Catalog7 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Catalog7 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Catalog7.fromValue(String.valueOf(value));
    }
  }
}
