/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DocumentLineOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-03T17:52:28.678Z[GMT]")
public class DocumentLineOutputModel {
  @SerializedName("cantidad")
  private Object cantidad = null;

  @SerializedName("descripcion")
  private String descripcion = null;

  @SerializedName("impuestos")
  private Object impuestos = null;

  @SerializedName("precioConIgv")
  private Object precioConIgv = null;

  @SerializedName("precioDeReferencia")
  private Object precioDeReferencia = null;

  @SerializedName("precioUnitario")
  private Object precioUnitario = null;

  @SerializedName("unidadMedida")
  private String unidadMedida = null;

  @SerializedName("valorVentaSinImpuestos")
  private Object valorVentaSinImpuestos = null;

  public DocumentLineOutputModel cantidad(Object cantidad) {
    this.cantidad = cantidad;
    return this;
  }

   /**
   * Get cantidad
   * @return cantidad
  **/
  @Schema(required = true, description = "")
  public Object getCantidad() {
    return cantidad;
  }

  public void setCantidad(Object cantidad) {
    this.cantidad = cantidad;
  }

  public DocumentLineOutputModel descripcion(String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

   /**
   * Get descripcion
   * @return descripcion
  **/
  @Schema(description = "")
  public String getDescripcion() {
    return descripcion;
  }

  public void setDescripcion(String descripcion) {
    this.descripcion = descripcion;
  }

  public DocumentLineOutputModel impuestos(Object impuestos) {
    this.impuestos = impuestos;
    return this;
  }

   /**
   * Get impuestos
   * @return impuestos
  **/
  @Schema(required = true, description = "")
  public Object getImpuestos() {
    return impuestos;
  }

  public void setImpuestos(Object impuestos) {
    this.impuestos = impuestos;
  }

  public DocumentLineOutputModel precioConIgv(Object precioConIgv) {
    this.precioConIgv = precioConIgv;
    return this;
  }

   /**
   * Get precioConIgv
   * @return precioConIgv
  **/
  @Schema(required = true, description = "")
  public Object getPrecioConIgv() {
    return precioConIgv;
  }

  public void setPrecioConIgv(Object precioConIgv) {
    this.precioConIgv = precioConIgv;
  }

  public DocumentLineOutputModel precioDeReferencia(Object precioDeReferencia) {
    this.precioDeReferencia = precioDeReferencia;
    return this;
  }

   /**
   * Get precioDeReferencia
   * @return precioDeReferencia
  **/
  @Schema(required = true, description = "")
  public Object getPrecioDeReferencia() {
    return precioDeReferencia;
  }

  public void setPrecioDeReferencia(Object precioDeReferencia) {
    this.precioDeReferencia = precioDeReferencia;
  }

  public DocumentLineOutputModel precioUnitario(Object precioUnitario) {
    this.precioUnitario = precioUnitario;
    return this;
  }

   /**
   * Get precioUnitario
   * @return precioUnitario
  **/
  @Schema(required = true, description = "")
  public Object getPrecioUnitario() {
    return precioUnitario;
  }

  public void setPrecioUnitario(Object precioUnitario) {
    this.precioUnitario = precioUnitario;
  }

  public DocumentLineOutputModel unidadMedida(String unidadMedida) {
    this.unidadMedida = unidadMedida;
    return this;
  }

   /**
   * Get unidadMedida
   * @return unidadMedida
  **/
  @Schema(description = "")
  public String getUnidadMedida() {
    return unidadMedida;
  }

  public void setUnidadMedida(String unidadMedida) {
    this.unidadMedida = unidadMedida;
  }

  public DocumentLineOutputModel valorVentaSinImpuestos(Object valorVentaSinImpuestos) {
    this.valorVentaSinImpuestos = valorVentaSinImpuestos;
    return this;
  }

   /**
   * Get valorVentaSinImpuestos
   * @return valorVentaSinImpuestos
  **/
  @Schema(required = true, description = "")
  public Object getValorVentaSinImpuestos() {
    return valorVentaSinImpuestos;
  }

  public void setValorVentaSinImpuestos(Object valorVentaSinImpuestos) {
    this.valorVentaSinImpuestos = valorVentaSinImpuestos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentLineOutputModel documentLineOutputModel = (DocumentLineOutputModel) o;
    return Objects.equals(this.cantidad, documentLineOutputModel.cantidad) &&
        Objects.equals(this.descripcion, documentLineOutputModel.descripcion) &&
        Objects.equals(this.impuestos, documentLineOutputModel.impuestos) &&
        Objects.equals(this.precioConIgv, documentLineOutputModel.precioConIgv) &&
        Objects.equals(this.precioDeReferencia, documentLineOutputModel.precioDeReferencia) &&
        Objects.equals(this.precioUnitario, documentLineOutputModel.precioUnitario) &&
        Objects.equals(this.unidadMedida, documentLineOutputModel.unidadMedida) &&
        Objects.equals(this.valorVentaSinImpuestos, documentLineOutputModel.valorVentaSinImpuestos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cantidad, descripcion, impuestos, precioConIgv, precioDeReferencia, precioUnitario, unidadMedida, valorVentaSinImpuestos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentLineOutputModel {\n");
    
    sb.append("    cantidad: ").append(toIndentedString(cantidad)).append("\n");
    sb.append("    descripcion: ").append(toIndentedString(descripcion)).append("\n");
    sb.append("    impuestos: ").append(toIndentedString(impuestos)).append("\n");
    sb.append("    precioConIgv: ").append(toIndentedString(precioConIgv)).append("\n");
    sb.append("    precioDeReferencia: ").append(toIndentedString(precioDeReferencia)).append("\n");
    sb.append("    precioUnitario: ").append(toIndentedString(precioUnitario)).append("\n");
    sb.append("    unidadMedida: ").append(toIndentedString(unidadMedida)).append("\n");
    sb.append("    valorVentaSinImpuestos: ").append(toIndentedString(valorVentaSinImpuestos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
