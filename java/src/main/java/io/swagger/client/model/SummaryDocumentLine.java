/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SummaryDocumentLine
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-02T05:58:18.345Z[GMT]")
public class SummaryDocumentLine {
  @SerializedName("comprobante")
  private Object comprobante = null;

  @SerializedName("comprobanteAfectado")
  private Object comprobanteAfectado = null;

  /**
   * Catalogo 19
   */
  @JsonAdapter(TipoOperacionEnum.Adapter.class)
  public enum TipoOperacionEnum {
    ADICIONAR("ADICIONAR"),
    _1("1"),
    MODIFICAR("MODIFICAR"),
    _2("2"),
    ANULADO("ANULADO"),
    _3("3");

    private String value;

    TipoOperacionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TipoOperacionEnum fromValue(String text) {
      for (TipoOperacionEnum b : TipoOperacionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TipoOperacionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TipoOperacionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TipoOperacionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TipoOperacionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("tipoOperacion")
  private TipoOperacionEnum tipoOperacion = null;

  public SummaryDocumentLine comprobante(Object comprobante) {
    this.comprobante = comprobante;
    return this;
  }

   /**
   * Get comprobante
   * @return comprobante
  **/
  @Schema(required = true, description = "")
  public Object getComprobante() {
    return comprobante;
  }

  public void setComprobante(Object comprobante) {
    this.comprobante = comprobante;
  }

  public SummaryDocumentLine comprobanteAfectado(Object comprobanteAfectado) {
    this.comprobanteAfectado = comprobanteAfectado;
    return this;
  }

   /**
   * Get comprobanteAfectado
   * @return comprobanteAfectado
  **/
  @Schema(description = "")
  public Object getComprobanteAfectado() {
    return comprobanteAfectado;
  }

  public void setComprobanteAfectado(Object comprobanteAfectado) {
    this.comprobanteAfectado = comprobanteAfectado;
  }

  public SummaryDocumentLine tipoOperacion(TipoOperacionEnum tipoOperacion) {
    this.tipoOperacion = tipoOperacion;
    return this;
  }

   /**
   * Catalogo 19
   * @return tipoOperacion
  **/
  @Schema(example = "AGREGAR", required = true, description = "Catalogo 19")
  public TipoOperacionEnum getTipoOperacion() {
    return tipoOperacion;
  }

  public void setTipoOperacion(TipoOperacionEnum tipoOperacion) {
    this.tipoOperacion = tipoOperacion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SummaryDocumentLine summaryDocumentLine = (SummaryDocumentLine) o;
    return Objects.equals(this.comprobante, summaryDocumentLine.comprobante) &&
        Objects.equals(this.comprobanteAfectado, summaryDocumentLine.comprobanteAfectado) &&
        Objects.equals(this.tipoOperacion, summaryDocumentLine.tipoOperacion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comprobante, comprobanteAfectado, tipoOperacion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SummaryDocumentLine {\n");
    
    sb.append("    comprobante: ").append(toIndentedString(comprobante)).append("\n");
    sb.append("    comprobanteAfectado: ").append(toIndentedString(comprobanteAfectado)).append("\n");
    sb.append("    tipoOperacion: ").append(toIndentedString(tipoOperacion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
