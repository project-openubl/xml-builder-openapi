/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Firmante;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SummaryDocument
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-03T17:52:28.678Z[GMT]")
public class SummaryDocument {
  @SerializedName("detalle")
  private Object detalle = null;

  @SerializedName("fechaEmision")
  private Long fechaEmision = null;

  @SerializedName("fechaEmisionDeComprobantesAsociados")
  private Long fechaEmisionDeComprobantesAsociados = null;

  @SerializedName("firmante")
  private Firmante firmante = null;

  @SerializedName("numero")
  private Integer numero = null;

  @SerializedName("proveedor")
  private Object proveedor = null;

  public SummaryDocument detalle(Object detalle) {
    this.detalle = detalle;
    return this;
  }

   /**
   * Get detalle
   * @return detalle
  **/
  @Schema(required = true, description = "")
  public Object getDetalle() {
    return detalle;
  }

  public void setDetalle(Object detalle) {
    this.detalle = detalle;
  }

  public SummaryDocument fechaEmision(Long fechaEmision) {
    this.fechaEmision = fechaEmision;
    return this;
  }

   /**
   * Fecha en la que se emite el comprobante de Resumen Diario. Fecha expresada en milliseconds
   * @return fechaEmision
  **/
  @Schema(example = "1585398109198", description = "Fecha en la que se emite el comprobante de Resumen Diario. Fecha expresada en milliseconds")
  public Long getFechaEmision() {
    return fechaEmision;
  }

  public void setFechaEmision(Long fechaEmision) {
    this.fechaEmision = fechaEmision;
  }

  public SummaryDocument fechaEmisionDeComprobantesAsociados(Long fechaEmisionDeComprobantesAsociados) {
    this.fechaEmisionDeComprobantesAsociados = fechaEmisionDeComprobantesAsociados;
    return this;
  }

   /**
   * Fecha en la que todos los comprobantes, dentro del resumen, fueron emitidos. Fecha expresada en milliseconds
   * @return fechaEmisionDeComprobantesAsociados
  **/
  @Schema(example = "1585398109198", required = true, description = "Fecha en la que todos los comprobantes, dentro del resumen, fueron emitidos. Fecha expresada en milliseconds")
  public Long getFechaEmisionDeComprobantesAsociados() {
    return fechaEmisionDeComprobantesAsociados;
  }

  public void setFechaEmisionDeComprobantesAsociados(Long fechaEmisionDeComprobantesAsociados) {
    this.fechaEmisionDeComprobantesAsociados = fechaEmisionDeComprobantesAsociados;
  }

  public SummaryDocument firmante(Firmante firmante) {
    this.firmante = firmante;
    return this;
  }

   /**
   * Get firmante
   * @return firmante
  **/
  @Schema(description = "")
  public Firmante getFirmante() {
    return firmante;
  }

  public void setFirmante(Firmante firmante) {
    this.firmante = firmante;
  }

  public SummaryDocument numero(Integer numero) {
    this.numero = numero;
    return this;
  }

   /**
   * Número de Resumen Diario emitido en el día
   * minimum: 1
   * @return numero
  **/
  @Schema(example = "1", required = true, description = "Número de Resumen Diario emitido en el día")
  public Integer getNumero() {
    return numero;
  }

  public void setNumero(Integer numero) {
    this.numero = numero;
  }

  public SummaryDocument proveedor(Object proveedor) {
    this.proveedor = proveedor;
    return this;
  }

   /**
   * Get proveedor
   * @return proveedor
  **/
  @Schema(required = true, description = "")
  public Object getProveedor() {
    return proveedor;
  }

  public void setProveedor(Object proveedor) {
    this.proveedor = proveedor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SummaryDocument summaryDocument = (SummaryDocument) o;
    return Objects.equals(this.detalle, summaryDocument.detalle) &&
        Objects.equals(this.fechaEmision, summaryDocument.fechaEmision) &&
        Objects.equals(this.fechaEmisionDeComprobantesAsociados, summaryDocument.fechaEmisionDeComprobantesAsociados) &&
        Objects.equals(this.firmante, summaryDocument.firmante) &&
        Objects.equals(this.numero, summaryDocument.numero) &&
        Objects.equals(this.proveedor, summaryDocument.proveedor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detalle, fechaEmision, fechaEmisionDeComprobantesAsociados, firmante, numero, proveedor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SummaryDocument {\n");
    
    sb.append("    detalle: ").append(toIndentedString(detalle)).append("\n");
    sb.append("    fechaEmision: ").append(toIndentedString(fechaEmision)).append("\n");
    sb.append("    fechaEmisionDeComprobantesAsociados: ").append(toIndentedString(fechaEmisionDeComprobantesAsociados)).append("\n");
    sb.append("    firmante: ").append(toIndentedString(firmante)).append("\n");
    sb.append("    numero: ").append(toIndentedString(numero)).append("\n");
    sb.append("    proveedor: ").append(toIndentedString(proveedor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
