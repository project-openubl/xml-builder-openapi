/*
 * XML Builder API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Catalog9
 */
@JsonAdapter(Catalog9.Adapter.class)
public enum Catalog9 {
  ANULACION_DE_LA_OPERACION("ANULACION_DE_LA_OPERACION"),
  ANULACION_POR_ERROR_EN_EL_RUC("ANULACION_POR_ERROR_EN_EL_RUC"),
  BONIFICACION("BONIFICACION"),
  CORRECCION_POR_ERROR_EN_LA_DESCRIPCION("CORRECCION_POR_ERROR_EN_LA_DESCRIPCION"),
  DESCUENTO_GLOBAL("DESCUENTO_GLOBAL"),
  DESCUENTO_POR_ITEM("DESCUENTO_POR_ITEM"),
  DEVOLUCION_POR_ITEM("DEVOLUCION_POR_ITEM"),
  DEVOLUCION_TOTAL("DEVOLUCION_TOTAL"),
  DISMINUCION_EN_EL_VALOR("DISMINUCION_EN_EL_VALOR"),
  OTROS_CONCEPTOS("OTROS_CONCEPTOS");

  private String value;

  Catalog9(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Catalog9 fromValue(String text) {
    for (Catalog9 b : Catalog9.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<Catalog9> {
    @Override
    public void write(final JsonWriter jsonWriter, final Catalog9 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Catalog9 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Catalog9.fromValue(String.valueOf(value));
    }
  }
}
