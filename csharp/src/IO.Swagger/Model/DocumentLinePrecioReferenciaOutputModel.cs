/* 
 * XML Builder API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DocumentLinePrecioReferenciaOutputModel
    /// </summary>
    [DataContract]
        public partial class DocumentLinePrecioReferenciaOutputModel :  IEquatable<DocumentLinePrecioReferenciaOutputModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentLinePrecioReferenciaOutputModel" /> class.
        /// </summary>
        /// <param name="precio">precio (required).</param>
        /// <param name="tipoPrecio">tipoPrecio (required).</param>
        public DocumentLinePrecioReferenciaOutputModel( precio = default(),  tipoPrecio = default())
        {
            // to ensure "precio" is required (not null)
            if (precio == null)
            {
                throw new InvalidDataException("precio is a required property for DocumentLinePrecioReferenciaOutputModel and cannot be null");
            }
            else
            {
                this.Precio = precio;
            }
            // to ensure "tipoPrecio" is required (not null)
            if (tipoPrecio == null)
            {
                throw new InvalidDataException("tipoPrecio is a required property for DocumentLinePrecioReferenciaOutputModel and cannot be null");
            }
            else
            {
                this.TipoPrecio = tipoPrecio;
            }
        }
        
        /// <summary>
        /// Gets or Sets Precio
        /// </summary>
        [DataMember(Name="precio", EmitDefaultValue=false)]
        public  Precio { get; set; }

        /// <summary>
        /// Gets or Sets TipoPrecio
        /// </summary>
        [DataMember(Name="tipoPrecio", EmitDefaultValue=false)]
        public  TipoPrecio { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DocumentLinePrecioReferenciaOutputModel {\n");
            sb.Append("  Precio: ").Append(Precio).Append("\n");
            sb.Append("  TipoPrecio: ").Append(TipoPrecio).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DocumentLinePrecioReferenciaOutputModel);
        }

        /// <summary>
        /// Returns true if DocumentLinePrecioReferenciaOutputModel instances are equal
        /// </summary>
        /// <param name="input">Instance of DocumentLinePrecioReferenciaOutputModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DocumentLinePrecioReferenciaOutputModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Precio == input.Precio ||
                    (this.Precio != null &&
                    this.Precio.Equals(input.Precio))
                ) && 
                (
                    this.TipoPrecio == input.TipoPrecio ||
                    (this.TipoPrecio != null &&
                    this.TipoPrecio.Equals(input.TipoPrecio))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Precio != null)
                    hashCode = hashCode * 59 + this.Precio.GetHashCode();
                if (this.TipoPrecio != null)
                    hashCode = hashCode * 59 + this.TipoPrecio.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
