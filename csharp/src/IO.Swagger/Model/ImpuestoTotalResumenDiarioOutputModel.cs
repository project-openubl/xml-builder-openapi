/* 
 * XML Builder API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ImpuestoTotalResumenDiarioOutputModel
    /// </summary>
    [DataContract]
        public partial class ImpuestoTotalResumenDiarioOutputModel :  IEquatable<ImpuestoTotalResumenDiarioOutputModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ImpuestoTotalResumenDiarioOutputModel" /> class.
        /// </summary>
        /// <param name="categoria">categoria (required).</param>
        /// <param name="importe">importe (required).</param>
        public ImpuestoTotalResumenDiarioOutputModel( categoria = default(),  importe = default())
        {
            // to ensure "categoria" is required (not null)
            if (categoria == null)
            {
                throw new InvalidDataException("categoria is a required property for ImpuestoTotalResumenDiarioOutputModel and cannot be null");
            }
            else
            {
                this.Categoria = categoria;
            }
            // to ensure "importe" is required (not null)
            if (importe == null)
            {
                throw new InvalidDataException("importe is a required property for ImpuestoTotalResumenDiarioOutputModel and cannot be null");
            }
            else
            {
                this.Importe = importe;
            }
        }
        
        /// <summary>
        /// Gets or Sets Categoria
        /// </summary>
        [DataMember(Name="categoria", EmitDefaultValue=false)]
        public  Categoria { get; set; }

        /// <summary>
        /// Gets or Sets Importe
        /// </summary>
        [DataMember(Name="importe", EmitDefaultValue=false)]
        public  Importe { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ImpuestoTotalResumenDiarioOutputModel {\n");
            sb.Append("  Categoria: ").Append(Categoria).Append("\n");
            sb.Append("  Importe: ").Append(Importe).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ImpuestoTotalResumenDiarioOutputModel);
        }

        /// <summary>
        /// Returns true if ImpuestoTotalResumenDiarioOutputModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ImpuestoTotalResumenDiarioOutputModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ImpuestoTotalResumenDiarioOutputModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Categoria == input.Categoria ||
                    (this.Categoria != null &&
                    this.Categoria.Equals(input.Categoria))
                ) && 
                (
                    this.Importe == input.Importe ||
                    (this.Importe != null &&
                    this.Importe.Equals(input.Importe))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Categoria != null)
                    hashCode = hashCode * 59 + this.Categoria.GetHashCode();
                if (this.Importe != null)
                    hashCode = hashCode * 59 + this.Importe.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
