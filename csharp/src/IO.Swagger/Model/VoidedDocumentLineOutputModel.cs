/* 
 * XML Builder API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// VoidedDocumentLineOutputModel
    /// </summary>
    [DataContract]
        public partial class VoidedDocumentLineOutputModel :  IEquatable<VoidedDocumentLineOutputModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VoidedDocumentLineOutputModel" /> class.
        /// </summary>
        /// <param name="fechaEmision">fechaEmision.</param>
        /// <param name="numero">numero.</param>
        /// <param name="serie">serie.</param>
        /// <param name="tipoComprobante">tipoComprobante (required).</param>
        public VoidedDocumentLineOutputModel(string fechaEmision = default(string), string numero = default(string), string serie = default(string),  tipoComprobante = default())
        {
            // to ensure "tipoComprobante" is required (not null)
            if (tipoComprobante == null)
            {
                throw new InvalidDataException("tipoComprobante is a required property for VoidedDocumentLineOutputModel and cannot be null");
            }
            else
            {
                this.TipoComprobante = tipoComprobante;
            }
            this.FechaEmision = fechaEmision;
            this.Numero = numero;
            this.Serie = serie;
        }
        
        /// <summary>
        /// Gets or Sets FechaEmision
        /// </summary>
        [DataMember(Name="fechaEmision", EmitDefaultValue=false)]
        public string FechaEmision { get; set; }

        /// <summary>
        /// Gets or Sets Numero
        /// </summary>
        [DataMember(Name="numero", EmitDefaultValue=false)]
        public string Numero { get; set; }

        /// <summary>
        /// Gets or Sets Serie
        /// </summary>
        [DataMember(Name="serie", EmitDefaultValue=false)]
        public string Serie { get; set; }

        /// <summary>
        /// Gets or Sets TipoComprobante
        /// </summary>
        [DataMember(Name="tipoComprobante", EmitDefaultValue=false)]
        public  TipoComprobante { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VoidedDocumentLineOutputModel {\n");
            sb.Append("  FechaEmision: ").Append(FechaEmision).Append("\n");
            sb.Append("  Numero: ").Append(Numero).Append("\n");
            sb.Append("  Serie: ").Append(Serie).Append("\n");
            sb.Append("  TipoComprobante: ").Append(TipoComprobante).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VoidedDocumentLineOutputModel);
        }

        /// <summary>
        /// Returns true if VoidedDocumentLineOutputModel instances are equal
        /// </summary>
        /// <param name="input">Instance of VoidedDocumentLineOutputModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VoidedDocumentLineOutputModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FechaEmision == input.FechaEmision ||
                    (this.FechaEmision != null &&
                    this.FechaEmision.Equals(input.FechaEmision))
                ) && 
                (
                    this.Numero == input.Numero ||
                    (this.Numero != null &&
                    this.Numero.Equals(input.Numero))
                ) && 
                (
                    this.Serie == input.Serie ||
                    (this.Serie != null &&
                    this.Serie.Equals(input.Serie))
                ) && 
                (
                    this.TipoComprobante == input.TipoComprobante ||
                    (this.TipoComprobante != null &&
                    this.TipoComprobante.Equals(input.TipoComprobante))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FechaEmision != null)
                    hashCode = hashCode * 59 + this.FechaEmision.GetHashCode();
                if (this.Numero != null)
                    hashCode = hashCode * 59 + this.Numero.GetHashCode();
                if (this.Serie != null)
                    hashCode = hashCode * 59 + this.Serie.GetHashCode();
                if (this.TipoComprobante != null)
                    hashCode = hashCode * 59 + this.TipoComprobante.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
