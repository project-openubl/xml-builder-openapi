/* 
 * XML Builder API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DocumentLine
    /// </summary>
    [DataContract]
        public partial class DocumentLine :  IEquatable<DocumentLine>, IValidatableObject
    {
        /// <summary>
        /// Catalogo 07
        /// </summary>
        /// <value>Catalogo 07</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum TipoIgvEnum
        {
            /// <summary>
            /// Enum GRAVADOOPERACIONONEROSA for value: GRAVADO_OPERACION_ONEROSA
            /// </summary>
            [EnumMember(Value = "GRAVADO_OPERACION_ONEROSA")]
            GRAVADOOPERACIONONEROSA = 1,
            /// <summary>
            /// Enum _10 for value: 10
            /// </summary>
            [EnumMember(Value = "10")]
            _10 = 2,
            /// <summary>
            /// Enum GRAVADORETIROPORPREMIO for value: GRAVADO_RETIRO_POR_PREMIO
            /// </summary>
            [EnumMember(Value = "GRAVADO_RETIRO_POR_PREMIO")]
            GRAVADORETIROPORPREMIO = 3,
            /// <summary>
            /// Enum _11 for value: 11
            /// </summary>
            [EnumMember(Value = "11")]
            _11 = 4,
            /// <summary>
            /// Enum GRAVADORETIROPORDONACION for value: GRAVADO_RETIRO_POR_DONACION
            /// </summary>
            [EnumMember(Value = "GRAVADO_RETIRO_POR_DONACION")]
            GRAVADORETIROPORDONACION = 5,
            /// <summary>
            /// Enum _12 for value: 12
            /// </summary>
            [EnumMember(Value = "12")]
            _12 = 6,
            /// <summary>
            /// Enum GRAVADORETIRO for value: GRAVADO_RETIRO
            /// </summary>
            [EnumMember(Value = "GRAVADO_RETIRO")]
            GRAVADORETIRO = 7,
            /// <summary>
            /// Enum _13 for value: 13
            /// </summary>
            [EnumMember(Value = "13")]
            _13 = 8,
            /// <summary>
            /// Enum GRAVADORETIROPORPUBLICIDAD for value: GRAVADO_RETIRO_POR_PUBLICIDAD
            /// </summary>
            [EnumMember(Value = "GRAVADO_RETIRO_POR_PUBLICIDAD")]
            GRAVADORETIROPORPUBLICIDAD = 9,
            /// <summary>
            /// Enum _14 for value: 14
            /// </summary>
            [EnumMember(Value = "14")]
            _14 = 10,
            /// <summary>
            /// Enum GRAVADOBONIFICACIONES for value: GRAVADO_BONIFICACIONES
            /// </summary>
            [EnumMember(Value = "GRAVADO_BONIFICACIONES")]
            GRAVADOBONIFICACIONES = 11,
            /// <summary>
            /// Enum _15 for value: 15
            /// </summary>
            [EnumMember(Value = "15")]
            _15 = 12,
            /// <summary>
            /// Enum GRAVADORETIROPORENTREGAATRABAJADORES for value: GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES
            /// </summary>
            [EnumMember(Value = "GRAVADO_RETIRO_POR_ENTREGA_A_TRABAJADORES")]
            GRAVADORETIROPORENTREGAATRABAJADORES = 13,
            /// <summary>
            /// Enum _16 for value: 16
            /// </summary>
            [EnumMember(Value = "16")]
            _16 = 14,
            /// <summary>
            /// Enum GRAVADOIVAP for value: GRAVADO_IVAP
            /// </summary>
            [EnumMember(Value = "GRAVADO_IVAP")]
            GRAVADOIVAP = 15,
            /// <summary>
            /// Enum _17 for value: 17
            /// </summary>
            [EnumMember(Value = "17")]
            _17 = 16,
            /// <summary>
            /// Enum EXONERADOOPERACIONONEROSA for value: EXONERADO_OPERACION_ONEROSA
            /// </summary>
            [EnumMember(Value = "EXONERADO_OPERACION_ONEROSA")]
            EXONERADOOPERACIONONEROSA = 17,
            /// <summary>
            /// Enum _20 for value: 20
            /// </summary>
            [EnumMember(Value = "20")]
            _20 = 18,
            /// <summary>
            /// Enum EXONERADOTRANSFERENCIAGRATUITA for value: EXONERADO_TRANSFERENCIA_GRATUITA
            /// </summary>
            [EnumMember(Value = "EXONERADO_TRANSFERENCIA_GRATUITA")]
            EXONERADOTRANSFERENCIAGRATUITA = 19,
            /// <summary>
            /// Enum _21 for value: 21
            /// </summary>
            [EnumMember(Value = "21")]
            _21 = 20,
            /// <summary>
            /// Enum INAFECTOOPERACIONONEROSA for value: INAFECTO_OPERACION_ONEROSA
            /// </summary>
            [EnumMember(Value = "INAFECTO_OPERACION_ONEROSA")]
            INAFECTOOPERACIONONEROSA = 21,
            /// <summary>
            /// Enum _30 for value: 30
            /// </summary>
            [EnumMember(Value = "30")]
            _30 = 22,
            /// <summary>
            /// Enum INAFECTORETIROPORBONIFICACION for value: INAFECTO_RETIRO_POR_BONIFICACION
            /// </summary>
            [EnumMember(Value = "INAFECTO_RETIRO_POR_BONIFICACION")]
            INAFECTORETIROPORBONIFICACION = 23,
            /// <summary>
            /// Enum _31 for value: 31
            /// </summary>
            [EnumMember(Value = "31")]
            _31 = 24,
            /// <summary>
            /// Enum INAFECTORETIRO for value: INAFECTO_RETIRO
            /// </summary>
            [EnumMember(Value = "INAFECTO_RETIRO")]
            INAFECTORETIRO = 25,
            /// <summary>
            /// Enum _32 for value: 32
            /// </summary>
            [EnumMember(Value = "32")]
            _32 = 26,
            /// <summary>
            /// Enum INAFECTORETIROPORMUESTRASMEDICAS for value: INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS
            /// </summary>
            [EnumMember(Value = "INAFECTO_RETIRO_POR_MUESTRAS_MEDICAS")]
            INAFECTORETIROPORMUESTRASMEDICAS = 27,
            /// <summary>
            /// Enum _33 for value: 33
            /// </summary>
            [EnumMember(Value = "33")]
            _33 = 28,
            /// <summary>
            /// Enum INAFECTORETIROPORCONVENIOCOLECTIVO for value: INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO
            /// </summary>
            [EnumMember(Value = "INAFECTO_RETIRO_POR_CONVENIO_COLECTIVO")]
            INAFECTORETIROPORCONVENIOCOLECTIVO = 29,
            /// <summary>
            /// Enum _34 for value: 34
            /// </summary>
            [EnumMember(Value = "34")]
            _34 = 30,
            /// <summary>
            /// Enum INAFECTORETIROPORPREMIO for value: INAFECTO_RETIRO_POR_PREMIO
            /// </summary>
            [EnumMember(Value = "INAFECTO_RETIRO_POR_PREMIO")]
            INAFECTORETIROPORPREMIO = 31,
            /// <summary>
            /// Enum _35 for value: 35
            /// </summary>
            [EnumMember(Value = "35")]
            _35 = 32,
            /// <summary>
            /// Enum INAFECTORETIROPORPUBLICIDAD for value: INAFECTO_RETIRO_POR_PUBLICIDAD
            /// </summary>
            [EnumMember(Value = "INAFECTO_RETIRO_POR_PUBLICIDAD")]
            INAFECTORETIROPORPUBLICIDAD = 33,
            /// <summary>
            /// Enum _36 for value: 36
            /// </summary>
            [EnumMember(Value = "36")]
            _36 = 34,
            /// <summary>
            /// Enum EXPORTACION for value: EXPORTACION
            /// </summary>
            [EnumMember(Value = "EXPORTACION")]
            EXPORTACION = 35,
            /// <summary>
            /// Enum _40 for value: 40
            /// </summary>
            [EnumMember(Value = "40")]
            _40 = 36        }
        /// <summary>
        /// Catalogo 07
        /// </summary>
        /// <value>Catalogo 07</value>
        [DataMember(Name="tipoIgv", EmitDefaultValue=false)]
        public TipoIgvEnum? TipoIgv { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentLine" /> class.
        /// </summary>
        /// <param name="cantidad">cantidad (required).</param>
        /// <param name="descripcion">Descripción del producto/servicio (required).</param>
        /// <param name="icb">True si el producto está afecto al impuesto ICB_PE.</param>
        /// <param name="precioConIgv">precioConIgv.</param>
        /// <param name="precioUnitario">precioUnitario.</param>
        /// <param name="tipoIgv">Catalogo 07.</param>
        /// <param name="unidadMedida">unidadMedida.</param>
        public DocumentLine( cantidad = default(), string descripcion = default(string), bool? icb = default(bool?),  precioConIgv = default(),  precioUnitario = default(), TipoIgvEnum? tipoIgv = default(TipoIgvEnum?), string unidadMedida = default(string))
        {
            // to ensure "cantidad" is required (not null)
            if (cantidad == null)
            {
                throw new InvalidDataException("cantidad is a required property for DocumentLine and cannot be null");
            }
            else
            {
                this.Cantidad = cantidad;
            }
            // to ensure "descripcion" is required (not null)
            if (descripcion == null)
            {
                throw new InvalidDataException("descripcion is a required property for DocumentLine and cannot be null");
            }
            else
            {
                this.Descripcion = descripcion;
            }
            this.Icb = icb;
            this.PrecioConIgv = precioConIgv;
            this.PrecioUnitario = precioUnitario;
            this.TipoIgv = tipoIgv;
            this.UnidadMedida = unidadMedida;
        }
        
        /// <summary>
        /// Gets or Sets Cantidad
        /// </summary>
        [DataMember(Name="cantidad", EmitDefaultValue=false)]
        public  Cantidad { get; set; }

        /// <summary>
        /// Descripción del producto/servicio
        /// </summary>
        /// <value>Descripción del producto/servicio</value>
        [DataMember(Name="descripcion", EmitDefaultValue=false)]
        public string Descripcion { get; set; }

        /// <summary>
        /// True si el producto está afecto al impuesto ICB_PE
        /// </summary>
        /// <value>True si el producto está afecto al impuesto ICB_PE</value>
        [DataMember(Name="icb", EmitDefaultValue=false)]
        public bool? Icb { get; set; }

        /// <summary>
        /// Gets or Sets PrecioConIgv
        /// </summary>
        [DataMember(Name="precioConIgv", EmitDefaultValue=false)]
        public  PrecioConIgv { get; set; }

        /// <summary>
        /// Gets or Sets PrecioUnitario
        /// </summary>
        [DataMember(Name="precioUnitario", EmitDefaultValue=false)]
        public  PrecioUnitario { get; set; }


        /// <summary>
        /// Gets or Sets UnidadMedida
        /// </summary>
        [DataMember(Name="unidadMedida", EmitDefaultValue=false)]
        public string UnidadMedida { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DocumentLine {\n");
            sb.Append("  Cantidad: ").Append(Cantidad).Append("\n");
            sb.Append("  Descripcion: ").Append(Descripcion).Append("\n");
            sb.Append("  Icb: ").Append(Icb).Append("\n");
            sb.Append("  PrecioConIgv: ").Append(PrecioConIgv).Append("\n");
            sb.Append("  PrecioUnitario: ").Append(PrecioUnitario).Append("\n");
            sb.Append("  TipoIgv: ").Append(TipoIgv).Append("\n");
            sb.Append("  UnidadMedida: ").Append(UnidadMedida).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DocumentLine);
        }

        /// <summary>
        /// Returns true if DocumentLine instances are equal
        /// </summary>
        /// <param name="input">Instance of DocumentLine to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DocumentLine input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Cantidad == input.Cantidad ||
                    (this.Cantidad != null &&
                    this.Cantidad.Equals(input.Cantidad))
                ) && 
                (
                    this.Descripcion == input.Descripcion ||
                    (this.Descripcion != null &&
                    this.Descripcion.Equals(input.Descripcion))
                ) && 
                (
                    this.Icb == input.Icb ||
                    (this.Icb != null &&
                    this.Icb.Equals(input.Icb))
                ) && 
                (
                    this.PrecioConIgv == input.PrecioConIgv ||
                    (this.PrecioConIgv != null &&
                    this.PrecioConIgv.Equals(input.PrecioConIgv))
                ) && 
                (
                    this.PrecioUnitario == input.PrecioUnitario ||
                    (this.PrecioUnitario != null &&
                    this.PrecioUnitario.Equals(input.PrecioUnitario))
                ) && 
                (
                    this.TipoIgv == input.TipoIgv ||
                    (this.TipoIgv != null &&
                    this.TipoIgv.Equals(input.TipoIgv))
                ) && 
                (
                    this.UnidadMedida == input.UnidadMedida ||
                    (this.UnidadMedida != null &&
                    this.UnidadMedida.Equals(input.UnidadMedida))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Cantidad != null)
                    hashCode = hashCode * 59 + this.Cantidad.GetHashCode();
                if (this.Descripcion != null)
                    hashCode = hashCode * 59 + this.Descripcion.GetHashCode();
                if (this.Icb != null)
                    hashCode = hashCode * 59 + this.Icb.GetHashCode();
                if (this.PrecioConIgv != null)
                    hashCode = hashCode * 59 + this.PrecioConIgv.GetHashCode();
                if (this.PrecioUnitario != null)
                    hashCode = hashCode * 59 + this.PrecioUnitario.GetHashCode();
                if (this.TipoIgv != null)
                    hashCode = hashCode * 59 + this.TipoIgv.GetHashCode();
                if (this.UnidadMedida != null)
                    hashCode = hashCode * 59 + this.UnidadMedida.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
