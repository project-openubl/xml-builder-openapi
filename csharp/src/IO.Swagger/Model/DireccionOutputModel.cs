/* 
 * XML Builder API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.Final
 * Contact: projectopenubl+subscribe@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DireccionOutputModel
    /// </summary>
    [DataContract]
        public partial class DireccionOutputModel :  IEquatable<DireccionOutputModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DireccionOutputModel" /> class.
        /// </summary>
        /// <param name="codigoLocal">codigoLocal.</param>
        /// <param name="codigoPais">codigoPais.</param>
        /// <param name="departamento">departamento.</param>
        /// <param name="direccion">direccion.</param>
        /// <param name="distrito">distrito.</param>
        /// <param name="provincia">provincia.</param>
        /// <param name="ubigeo">ubigeo.</param>
        /// <param name="urbanizacion">urbanizacion.</param>
        public DireccionOutputModel(string codigoLocal = default(string), string codigoPais = default(string), string departamento = default(string), string direccion = default(string), string distrito = default(string), string provincia = default(string), string ubigeo = default(string), string urbanizacion = default(string))
        {
            this.CodigoLocal = codigoLocal;
            this.CodigoPais = codigoPais;
            this.Departamento = departamento;
            this.Direccion = direccion;
            this.Distrito = distrito;
            this.Provincia = provincia;
            this.Ubigeo = ubigeo;
            this.Urbanizacion = urbanizacion;
        }
        
        /// <summary>
        /// Gets or Sets CodigoLocal
        /// </summary>
        [DataMember(Name="codigoLocal", EmitDefaultValue=false)]
        public string CodigoLocal { get; set; }

        /// <summary>
        /// Gets or Sets CodigoPais
        /// </summary>
        [DataMember(Name="codigoPais", EmitDefaultValue=false)]
        public string CodigoPais { get; set; }

        /// <summary>
        /// Gets or Sets Departamento
        /// </summary>
        [DataMember(Name="departamento", EmitDefaultValue=false)]
        public string Departamento { get; set; }

        /// <summary>
        /// Gets or Sets Direccion
        /// </summary>
        [DataMember(Name="direccion", EmitDefaultValue=false)]
        public string Direccion { get; set; }

        /// <summary>
        /// Gets or Sets Distrito
        /// </summary>
        [DataMember(Name="distrito", EmitDefaultValue=false)]
        public string Distrito { get; set; }

        /// <summary>
        /// Gets or Sets Provincia
        /// </summary>
        [DataMember(Name="provincia", EmitDefaultValue=false)]
        public string Provincia { get; set; }

        /// <summary>
        /// Gets or Sets Ubigeo
        /// </summary>
        [DataMember(Name="ubigeo", EmitDefaultValue=false)]
        public string Ubigeo { get; set; }

        /// <summary>
        /// Gets or Sets Urbanizacion
        /// </summary>
        [DataMember(Name="urbanizacion", EmitDefaultValue=false)]
        public string Urbanizacion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DireccionOutputModel {\n");
            sb.Append("  CodigoLocal: ").Append(CodigoLocal).Append("\n");
            sb.Append("  CodigoPais: ").Append(CodigoPais).Append("\n");
            sb.Append("  Departamento: ").Append(Departamento).Append("\n");
            sb.Append("  Direccion: ").Append(Direccion).Append("\n");
            sb.Append("  Distrito: ").Append(Distrito).Append("\n");
            sb.Append("  Provincia: ").Append(Provincia).Append("\n");
            sb.Append("  Ubigeo: ").Append(Ubigeo).Append("\n");
            sb.Append("  Urbanizacion: ").Append(Urbanizacion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DireccionOutputModel);
        }

        /// <summary>
        /// Returns true if DireccionOutputModel instances are equal
        /// </summary>
        /// <param name="input">Instance of DireccionOutputModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DireccionOutputModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoLocal == input.CodigoLocal ||
                    (this.CodigoLocal != null &&
                    this.CodigoLocal.Equals(input.CodigoLocal))
                ) && 
                (
                    this.CodigoPais == input.CodigoPais ||
                    (this.CodigoPais != null &&
                    this.CodigoPais.Equals(input.CodigoPais))
                ) && 
                (
                    this.Departamento == input.Departamento ||
                    (this.Departamento != null &&
                    this.Departamento.Equals(input.Departamento))
                ) && 
                (
                    this.Direccion == input.Direccion ||
                    (this.Direccion != null &&
                    this.Direccion.Equals(input.Direccion))
                ) && 
                (
                    this.Distrito == input.Distrito ||
                    (this.Distrito != null &&
                    this.Distrito.Equals(input.Distrito))
                ) && 
                (
                    this.Provincia == input.Provincia ||
                    (this.Provincia != null &&
                    this.Provincia.Equals(input.Provincia))
                ) && 
                (
                    this.Ubigeo == input.Ubigeo ||
                    (this.Ubigeo != null &&
                    this.Ubigeo.Equals(input.Ubigeo))
                ) && 
                (
                    this.Urbanizacion == input.Urbanizacion ||
                    (this.Urbanizacion != null &&
                    this.Urbanizacion.Equals(input.Urbanizacion))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoLocal != null)
                    hashCode = hashCode * 59 + this.CodigoLocal.GetHashCode();
                if (this.CodigoPais != null)
                    hashCode = hashCode * 59 + this.CodigoPais.GetHashCode();
                if (this.Departamento != null)
                    hashCode = hashCode * 59 + this.Departamento.GetHashCode();
                if (this.Direccion != null)
                    hashCode = hashCode * 59 + this.Direccion.GetHashCode();
                if (this.Distrito != null)
                    hashCode = hashCode * 59 + this.Distrito.GetHashCode();
                if (this.Provincia != null)
                    hashCode = hashCode * 59 + this.Provincia.GetHashCode();
                if (this.Ubigeo != null)
                    hashCode = hashCode * 59 + this.Ubigeo.GetHashCode();
                if (this.Urbanizacion != null)
                    hashCode = hashCode * 59 + this.Urbanizacion.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
