# coding: utf-8

"""
    XML Builder API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0.Final
    Contact: projectopenubl+subscribe@googlegroups.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class DocumentImpuestosOutputModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'exoneradas': 'ImpuestoTotalOutputModel',
        'gratuitas': 'ImpuestoTotalOutputModel',
        'gravadas': 'ImpuestoTotalOutputModel',
        'icb': 'ImpuestoTotalICBOutputModel',
        'importe_total': 'Object',
        'inafectas': 'ImpuestoTotalOutputModel',
        'ivap': 'ImpuestoTotalOutputModel'
    }

    attribute_map = {
        'exoneradas': 'exoneradas',
        'gratuitas': 'gratuitas',
        'gravadas': 'gravadas',
        'icb': 'icb',
        'importe_total': 'importeTotal',
        'inafectas': 'inafectas',
        'ivap': 'ivap'
    }

    def __init__(self, exoneradas=None, gratuitas=None, gravadas=None, icb=None, importe_total=None, inafectas=None, ivap=None):  # noqa: E501
        """DocumentImpuestosOutputModel - a model defined in Swagger"""  # noqa: E501
        self._exoneradas = None
        self._gratuitas = None
        self._gravadas = None
        self._icb = None
        self._importe_total = None
        self._inafectas = None
        self._ivap = None
        self.discriminator = None
        if exoneradas is not None:
            self.exoneradas = exoneradas
        if gratuitas is not None:
            self.gratuitas = gratuitas
        if gravadas is not None:
            self.gravadas = gravadas
        if icb is not None:
            self.icb = icb
        self.importe_total = importe_total
        if inafectas is not None:
            self.inafectas = inafectas
        if ivap is not None:
            self.ivap = ivap

    @property
    def exoneradas(self):
        """Gets the exoneradas of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The exoneradas of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: ImpuestoTotalOutputModel
        """
        return self._exoneradas

    @exoneradas.setter
    def exoneradas(self, exoneradas):
        """Sets the exoneradas of this DocumentImpuestosOutputModel.


        :param exoneradas: The exoneradas of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: ImpuestoTotalOutputModel
        """

        self._exoneradas = exoneradas

    @property
    def gratuitas(self):
        """Gets the gratuitas of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The gratuitas of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: ImpuestoTotalOutputModel
        """
        return self._gratuitas

    @gratuitas.setter
    def gratuitas(self, gratuitas):
        """Sets the gratuitas of this DocumentImpuestosOutputModel.


        :param gratuitas: The gratuitas of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: ImpuestoTotalOutputModel
        """

        self._gratuitas = gratuitas

    @property
    def gravadas(self):
        """Gets the gravadas of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The gravadas of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: ImpuestoTotalOutputModel
        """
        return self._gravadas

    @gravadas.setter
    def gravadas(self, gravadas):
        """Sets the gravadas of this DocumentImpuestosOutputModel.


        :param gravadas: The gravadas of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: ImpuestoTotalOutputModel
        """

        self._gravadas = gravadas

    @property
    def icb(self):
        """Gets the icb of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The icb of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: ImpuestoTotalICBOutputModel
        """
        return self._icb

    @icb.setter
    def icb(self, icb):
        """Sets the icb of this DocumentImpuestosOutputModel.


        :param icb: The icb of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: ImpuestoTotalICBOutputModel
        """

        self._icb = icb

    @property
    def importe_total(self):
        """Gets the importe_total of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The importe_total of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: Object
        """
        return self._importe_total

    @importe_total.setter
    def importe_total(self, importe_total):
        """Sets the importe_total of this DocumentImpuestosOutputModel.


        :param importe_total: The importe_total of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: Object
        """
        if importe_total is None:
            raise ValueError("Invalid value for `importe_total`, must not be `None`")  # noqa: E501

        self._importe_total = importe_total

    @property
    def inafectas(self):
        """Gets the inafectas of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The inafectas of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: ImpuestoTotalOutputModel
        """
        return self._inafectas

    @inafectas.setter
    def inafectas(self, inafectas):
        """Sets the inafectas of this DocumentImpuestosOutputModel.


        :param inafectas: The inafectas of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: ImpuestoTotalOutputModel
        """

        self._inafectas = inafectas

    @property
    def ivap(self):
        """Gets the ivap of this DocumentImpuestosOutputModel.  # noqa: E501


        :return: The ivap of this DocumentImpuestosOutputModel.  # noqa: E501
        :rtype: ImpuestoTotalOutputModel
        """
        return self._ivap

    @ivap.setter
    def ivap(self, ivap):
        """Sets the ivap of this DocumentImpuestosOutputModel.


        :param ivap: The ivap of this DocumentImpuestosOutputModel.  # noqa: E501
        :type: ImpuestoTotalOutputModel
        """

        self._ivap = ivap

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DocumentImpuestosOutputModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DocumentImpuestosOutputModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
